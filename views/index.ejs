<!DOCTYPE html>
<html lang="en">
  <%- include('./layout/head'); %>
  <body>
    <%- include('./layout/navbar'); %>
    <div class="container-fluid p-4">
      <div class="layout">
        <div id="map" class="rounded-3"></div>

        <div class="d-flex flex-column justify-content-start" style="max-height: 80vh;">
           <!-- search -->
          <div class="mb-3">
            <input class="form-control me-2" id="search" type="search" placeholder="Cari nama atau alamat">
          </div>

          <div class="card overflow-auto" >
            <ul id="list" class="list-group list-group-flush">
             <!-- data masuk disini -->
            </ul>
          </div>
        </div>
      </div>
    </div>

    <script>
      const searchInput = document.getElementById("search")
      const list = document.getElementById("list")

      // koordinat awal
      const coordinate = [-7.263013225873337, 112.75422315732179]

      // membuat layer grup & format data
      let layers = L.layerGroup();
      let stations = <%- JSON.stringify(data) %>;
      
      // menampilkan map
      const map = L.map("map").setView(coordinate, 12);

      // menampilkan data & marker
      renderItem(stations);

      // handle perubahan input search
      searchInput.addEventListener('change', handleSearch);

      // konfigurasi map 
      const tiles = L.tileLayer(
        "https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw",
        {
          maxZoom: 17,
          attribution:
            'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, ' +
            'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
          id: "mapbox/streets-v11",
          tileSize: 512,
          zoomOffset: -1,
        }
      ).addTo(map);

      // fungsi untuk search
      function handleSearch(e) {
        const input = e.target.value;

        if (!input) renderItem(stations);
        else {
          filteredStation = stations.filter(item => {
            return item.name.toLowerCase().includes(input.toLowerCase()) ||
                   item.address.toLowerCase().includes(input.toLowerCase())
          });
          renderItem(filteredStation);
        }
      };
      
      // fungsi untuk menampilkan data & marker
      function renderItem(data) {
        // reset view
        list.innerHTML = '';
        let markers = [];
        let listItem = ''
        if (layers) layers.clearLayers();

        if (data.length > 0) {
          data.forEach(item => {
            const { id, name, address, openingTime, closingTime } = item;
            listItem = `<li class="list-group-item">
                          <h4 id="${id}" class="title">${name}</h4>
                          <p>${address}</p>
                          <p style="margin: 0; padding: 0;">Waktu Buka: ${openingTime === closingTime ? '24 Jam' : openingTime + ' - ' + closingTime}</p>
                        </li>`;

            // menampilkan list data
            list.insertAdjacentHTML('afterbegin', listItem);
            
            // klik nama data untuk zoom in
            let title = document.getElementById(String(item.id));
            title.onclick = () => map.setView([item.coordinateX, item.coordinateY], 18);

            // buat marker untuk tiap data
            markers = [...markers, L.marker([item.coordinateX, item.coordinateY]).bindPopup(item.name)];
          });

          // tampilkan marker
          layers = L.layerGroup(markers).addTo(map);
        } else {
          listItem = `<li class="list-group-item">
                        <h4 class="title">Data Tidak Ditemukan</h4>
                      </li>`;

          list.insertAdjacentHTML('afterbegin', listItem);
        }
      }

    </script>
  </body>
</html>
